# Makefile para compilar o jogo Detective Quest - N√≠vel Mestre
# Compilador
CC = gcc

# Flags de compila√ß√£o
CFLAGS = -Wall -Wextra -std=c99 -g

# Nome do execut√°vel
TARGET = detective_quest_mestre

# Arquivo fonte
SOURCES = detective_quest_mestre.c

# Regra padr√£o
all: $(TARGET)

# Regra para criar o execut√°vel
$(TARGET): $(SOURCES)
	$(CC) $(CFLAGS) -o $(TARGET) $(SOURCES)

# Regra para executar o programa
run: $(TARGET)
	./$(TARGET)

# Regra para compilar e executar com informa√ß√µes
test: $(TARGET)
	@echo "================================================="
	@echo "üéÆ Detective Quest - N√≠vel Mestre"
	@echo "================================================="
	@echo "‚úÖ Compila√ß√£o conclu√≠da com sucesso!"
	@echo ""
	@echo "üéØ Funcionalidades implementadas:"
	@echo "   ‚Ä¢ √Årvore Bin√°ria para navega√ß√£o"
	@echo "   ‚Ä¢ BST para organiza√ß√£o de pistas"
	@echo "   ‚Ä¢ Tabela Hash para suspeitos"
	@echo "   ‚Ä¢ Sistema de julgamento inteligente"
	@echo ""
	@echo "‚öñÔ∏è  Iniciando investiga√ß√£o..."
	@echo "================================================="
	@echo ""
	./$(TARGET)

# Regra para demonstra√ß√£o r√°pida
demo: $(TARGET)
	@echo "üïµÔ∏è  DEMONSTRA√á√ÉO - DETECTIVE QUEST MESTRE"
	@echo "=========================================="
	@echo "Este √© o n√≠vel mais avan√ßado do Detective Quest!"
	@echo ""
	@echo "üìä Estruturas de dados utilizadas:"
	@echo "   1. √Årvore Bin√°ria - Mapa da mans√£o"
	@echo "   2. BST - Organiza√ß√£o de pistas"
	@echo "   3. Tabela Hash - Associa√ß√£o pista-suspeito"
	@echo ""
	@echo "üéØ Objetivo: Coletar evid√™ncias e resolver o caso!"
	@echo "=========================================="

# Regra para verificar estruturas de dados
check-structures:
	@echo "üîç VERIFICA√á√ÉO DAS ESTRUTURAS DE DADOS"
	@echo "======================================"
	@echo ""
	@echo "1. üå≥ √ÅRVORE BIN√ÅRIA (Mapa da Mans√£o):"
	@echo "   ‚Ä¢ Navega√ß√£o hierarchical"
	@echo "   ‚Ä¢ Cada n√≥ = sala da mans√£o"
	@echo "   ‚Ä¢ Explora√ß√£o por escolhas esquerda/direita"
	@echo ""
	@echo "2. üîÑ BST (Pistas Coletadas):"
	@echo "   ‚Ä¢ Ordena√ß√£o autom√°tica alfab√©tica"
	@echo "   ‚Ä¢ Inser√ß√£o O(log n) no melhor caso"
	@echo "   ‚Ä¢ Percurso in-order para exibi√ß√£o"
	@echo ""
	@echo "3. #Ô∏è‚É£ TABELA HASH (Pista ‚Üí Suspeito):"
	@echo "   ‚Ä¢ Associa√ß√£o eficiente O(1)"
	@echo "   ‚Ä¢ Hash function: djb2 algorithm"
	@echo "   ‚Ä¢ Resolu√ß√£o de colis√µes por encadeamento"
	@echo ""
	@echo "4. ‚öñÔ∏è  ALGORITMO DE JULGAMENTO:"
	@echo "   ‚Ä¢ Contagem recursiva de evid√™ncias"
	@echo "   ‚Ä¢ Verifica√ß√£o de threshold (‚â•2 pistas)"
	@echo "   ‚Ä¢ Decis√£o autom√°tica baseada em dados"

# Regra para limpar arquivos gerados
clean:
	rm -f $(TARGET)

# Regra para mostrar ajuda completa
help:
	@echo "üéÆ Detective Quest - N√≠vel Mestre"
	@echo "================================="
	@echo ""
	@echo "üìã Comandos dispon√≠veis:"
	@echo "  make              - Compila o programa"
	@echo "  make run          - Compila e executa"
	@echo "  make test         - Executa com informa√ß√µes detalhadas"
	@echo "  make demo         - Mostra demonstra√ß√£o das funcionalidades"
	@echo "  make check-structures - Explica as estruturas de dados"
	@echo "  make clean        - Remove arquivos gerados"
	@echo "  make help         - Mostra esta ajuda"
	@echo ""
	@echo "üéØ Caracter√≠sticas do N√≠vel Mestre:"
	@echo "  ‚Ä¢ Combina 3 estruturas de dados principais"
	@echo "  ‚Ä¢ Sistema de investiga√ß√£o completo"
	@echo "  ‚Ä¢ Algoritmo de julgamento inteligente"
	@echo "  ‚Ä¢ Interface avan√ßada com feedback detalhado"
	@echo ""
	@echo "üìö Conceitos educacionais:"
	@echo "  ‚Ä¢ √Årvores Bin√°rias e BST"
	@echo "  ‚Ä¢ Tabelas Hash com fun√ß√£o de hash"
	@echo "  ‚Ä¢ Algoritmos de busca e contagem"
	@echo "  ‚Ä¢ Gerenciamento de mem√≥ria complexo"
	@echo "  ‚Ä¢ Modulariza√ß√£o avan√ßada"

.PHONY: all run test demo check-structures clean help
